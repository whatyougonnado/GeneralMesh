#pragma once

#include <GeneralMesh.h>
#include <iostream>

class GeneralMeshIdx :public GeneralMesh
{
public:
    GeneralMeshIdx() = delete;
    GeneralMeshIdx(const char* input_filename_c);
    ~GeneralMeshIdx() {};

    //use as 258_(10) -> 13_(255)
    //the target numeral system is presented maximum three digits.(r = a2 * [to]^2, g = a1 * [to]^1, b = a0 * [to]^0)
    static glm::vec3 encodeNormalizedNumeralSystem(int val, int to = 255);

    struct GLMVertexWithId {
        glm::vec3 position;
        glm::vec3 faceid; //generated by encodeNormalizedNumeralSystem
    };

    const std::vector<GLMVertexWithId>& getGLNormalizedVerticesWithId() const { return gl_vertices_normalized_with_faceid_; };

private:
    void glFriendlyMesh_();

    std::vector<GLMVertexWithId> gl_vertices_normalized_with_faceid_;
};